//Continuous Delivery release configuration with CDeliveryBoy

apply plugin: 'info.solidsoft.cdeliveryboy'
apply plugin: 'io.codearte.nexus-upload-staging'

cDeliveryBoy {
    tasks {
        uploadArchivesTask = 'uploadArchivesStaging'
        promoteRepositoryTask = 'releaseRepository'
    }
    nexus {
        autoPromote = false //TODO: To be enabled after first successful half-automatic production release
    }
}

nexusStaging {
    packageGroup = 'com.pszymczyk'
    stagingProfileId = '1ebbe7fabed00a'
}

scmVersion {
    versionIncrementer 'incrementPatch'
    hooks {
        pre 'fileUpdate', [file       : 'README.md', pattern: { previousVersion, context -> /testImplementation\ 'com\.pszymczyk\.consul:embedded-consul:$previousVersion'/ },
                           replacement: { currentVersion, context -> /testImplementation 'com.pszymczyk.consul:embedded-consul:$currentVersion'/ }]
        pre 'fileUpdate', [file       : 'README.md', pattern: { previousVersion, context -> /<version>$previousVersion<\/version>/ },
                           replacement: { currentVersion, context -> /<version>$currentVersion<\/version>'/ }]
        pre 'fileUpdate', [file       : 'CHANGELOG.md', pattern: { previousVersion, context -> /^##\ ${context.currentVersion}\ -\ Unreleased$/ },
                           replacement: { currentVersion, context -> /## $currentVersion - ${new Date().format( 'yyyy-MM-dd' )}/ }]
    }
}

group = 'com.pszymczyk.consul'
//Beware: All release/version related changes should be put before that line which triggers (lazy) version evaluation
project.version = scmVersion.version

String repoSlug = 'pszymczyk/embedded-consul'
modifyPom {
    project {
        name 'Embedded Consul'
        description 'Embedded Consul provides easy way to run Consul in integration tests.'
        url 'https://github.com/pszymczyk/embedded-consul'
        inceptionYear '2017'

        scm {
            url "https://github.com/${repoSlug}"
            connection "scm:git:git://github.com/${repoSlug}.git"
            developerConnection "scm:git:git@github.com:${repoSlug}.git"
        }

        licenses {
            license {
                name 'The Apache Software License, Version 2.0'
                url 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                distribution 'repo'
            }
        }

        developers {
            developer {
                id 'pszymczyk'
                name 'Pawel Szymczyk'
                email 'pawel@pszymczyk.com'
                roles {
                    role 'despot'
                    role 'developer'
                }
            }
        }
    }
}

if (hasProperty('changelogSync')) {

    task syncChangelog(type: Exec) {
        doFirst { logger.info("Synchronizing changelog with GitHub for version ${project.version}") }
        commandLine 'chandler', 'push', "release/${project.version}", '--tag-prefix=release/'
    }

    syncChangelog {
        onlyIf { ciBuild.inReleaseMode }
        mustRunAfter releaseRepository
        if (project.tasks.findByName("publishPlugins")) {
            mustRunAfter publishPlugins
        }
    }
    ciBuild.dependsOn syncChangelog
}
